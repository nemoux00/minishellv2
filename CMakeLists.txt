PROJECT(minishell)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)

cmake_policy(VERSION 2.8)

SET(minishell_VERSION_MAJOR 0)
SET(minishell_VERSION_MINOR 1)

SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake" ${CMAKE_MODULE_PATH})

SET(BIN_DIR  "${CMAKE_INSTALL_PREFIX}/bin")
SET(DOC_DIR  "${CMAKE_INSTALL_PREFIX}/share/doc/${PROJECT_NAME}")
SET(DATA_DIR "${CMAKE_INSTALL_PREFIX}/share/${PROJECT_NAME}")
SET(ICON_DIR "${DATA_DIR}/icons")
SET(IMG_DIR "${DATA_DIR}/images")
SET(SOUND_DIR "${DATA_DIR}/sounds")
SET(MOV_DIR "${DATA_DIR}/movies")
SET(ETC_DIR "/etc/${PROJECT_NAME}")

SET(CMAKE_INSTALL_LIBDIR "${CMAKE_INSTALL_PREFIX}/lib${CMAKE_LIBRARY_SUFFIX}")
SET(CMAKE_INSTALL_INCDIR "${CMAKE_INSTALL_PREFIX}/include")
SET(CMAKE_INSTALL_PKGDIR "${CMAKE_INSTALL_LIBDIR}/pkgconfig")

ADD_DEFINITIONS(-DPROJECT_NAME="${PROJECT_NAME}")
ADD_DEFINITIONS(-DBIN_DIR="${BIN_DIR}")
ADD_DEFINITIONS(-DDATA_DIR="${DATA_DIR}")
ADD_DEFINITIONS(-DICON_DIR="${ICON_DIR}")
ADD_DEFINITIONS(-DIMG_DIR="${IMG_DIR}")
ADD_DEFINITIONS(-DSOUND_DIR="${SOUND_DIR}")
ADD_DEFINITIONS(-DETC_DIR="${ETC_DIR}")

FIND_PACKAGE(PkgConfig REQUIRED)

PKG_CHECK_MODULES(NEMO REQUIRED nemoapps nemobus nemohelper nemoutil nemowidget nemoui)
INCLUDE_DIRECTORIES(${NEMO_INCLUDE_DIRS})
LINK_DIRECTORIES(${NEMO_LIBRARY_DIRS})

IF(WITH_OPTIMIZE)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O2 -Wno-unused-result")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2 -Wno-unused-result")
ENDIF(WITH_OPTIMIZE)

IF(WITH_DEBUG)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
ENDIF(WITH_DEBUG)

IF(WITH_PROFILE)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pg")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pg")
	SET(CMAKE_LINK_FLAGS "${CMAKE_LINK_FLAGS} -pg")
ENDIF(WITH_PROFILE)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fdiagnostics-color=auto -Wall -fPIC")
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-z,defs -Wl,--as-needed -Wl,--hash-style=both")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_C_FLAGS} -std=c++11")

SET(NEMOAPPS_COMMON_LIBRARIES
    m
    rt
    jpeg
    magic
    pthread
    sndfile
    ${NEMO_LIBRARIES}
    ${COMMON_LIBRARIES}
	)

SET(CONFXML "minishell.conf")
SET(APPNAME "nemominishell")
SET(MINISHELL_MOV_DIR "${MOV_DIR}/${APPNAME}")
ADD_DEFINITIONS(-DCONFXML="${CONFXML}")
ADD_DEFINITIONS(-DAPPNAME="${APPNAME}")
ADD_DEFINITIONS(-DMINISHELL_MOV_DIR="${MINISHELL_MOV_DIR}")

ADD_EXECUTABLE(${APPNAME}
    minishell.c
    )

TARGET_LINK_LIBRARIES(${APPNAME}
    nemoutil
    nemowidget
    nemoui
    ${NEMOPLAY_LIBRARIES}
    ${NEMOAPPS_COMMON_LIBRARIES}
	)

CONFIGURE_FILE(${CONFXML}.in ${CONFXML} @ONLY)
INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/${CONFXML}
    DESTINATION ${ETC_DIR}
    )
INSTALL(TARGETS ${APPNAME}
    DESTINATION bin
    )
INSTALL(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/movies/
    DESTINATION  ${MINISHELL_MOV_DIR}
    )
